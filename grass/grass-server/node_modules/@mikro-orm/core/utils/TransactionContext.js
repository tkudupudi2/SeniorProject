"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionContext = void 0;
const domain_1 = __importDefault(require("domain"));
class TransactionContext {
    constructor(em) {
        this.em = em;
        this.id = this.em.id;
    }
    /**
     * Creates new TransactionContext instance and runs the code inside its domain.
     */
    static async createAsync(em, next) {
        const context = new TransactionContext(em);
        const old = domain_1.default.active;
        const d = domain_1.default.create();
        Object.assign(d, old);
        d.__mikro_orm_tx_context = context;
        return new Promise((resolve, reject) => {
            d.run(() => next().then(resolve).catch(reject));
        });
    }
    /**
     * Returns current TransactionContext (if available).
     */
    static currentTransactionContext() {
        const active = domain_1.default.active;
        return active ? active.__mikro_orm_tx_context : undefined;
    }
    /**
     * Returns current EntityManager (if available).
     */
    static getEntityManager() {
        const context = TransactionContext.currentTransactionContext();
        return context ? context.em : undefined;
    }
}
exports.TransactionContext = TransactionContext;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { isNumber } from "@chakra-ui/utils";
import { createTransform, px as pxTransform } from "../create-transform";
import { logical, toConfig } from "../prop-config";
export * from "./types";

function fractionalValue(value) {
  return !isNumber(value) || value > 1 ? value : value * 100 + "%";
}

export var t = {
  borderWidths: toConfig("borderWidths"),
  borderStyles: toConfig("borderStyles"),
  colors: toConfig("colors"),
  borders: toConfig("borders"),
  radii: toConfig("radii", pxTransform),
  space: toConfig("space", pxTransform),
  spaceT: toConfig("space", pxTransform),
  prop: (property, scale, transform) => _extends({
    property,
    scale
  }, scale && {
    transform: createTransform({
      scale,
      transform
    })
  }),
  sizes: toConfig("sizes", pxTransform),
  sizesT: toConfig("sizes", fractionalValue),
  shadows: toConfig("shadows"),
  logical
};
//# sourceMappingURL=index.js.map
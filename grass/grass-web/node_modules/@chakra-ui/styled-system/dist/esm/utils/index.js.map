{"version":3,"sources":["../../../src/utils/index.ts"],"names":["isNumber","createTransform","px","pxTransform","logical","toConfig","fractionalValue","value","t","borderWidths","borderStyles","colors","borders","radii","space","spaceT","prop","property","scale","transform","sizes","sizesT","shadows"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,eAAT,EAA0BC,EAAE,IAAIC,WAAhC,QAAmD,qBAAnD;AAEA,SAASC,OAAT,EAA8BC,QAA9B,QAA8C,gBAA9C;AAEA,cAAc,SAAd;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAqC;AACnC,SAAO,CAACP,QAAQ,CAACO,KAAD,CAAT,IAAoBA,KAAK,GAAG,CAA5B,GAAgCA,KAAhC,GAA2CA,KAAK,GAAG,GAAnD,MAAP;AACD;;AAED,OAAO,IAAMC,CAAC,GAAG;AACfC,EAAAA,YAAY,EAAEJ,QAAQ,CAAC,cAAD,CADP;AAEfK,EAAAA,YAAY,EAAEL,QAAQ,CAAC,cAAD,CAFP;AAGfM,EAAAA,MAAM,EAAEN,QAAQ,CAAC,QAAD,CAHD;AAIfO,EAAAA,OAAO,EAAEP,QAAQ,CAAC,SAAD,CAJF;AAKfQ,EAAAA,KAAK,EAAER,QAAQ,CAAC,OAAD,EAAUF,WAAV,CALA;AAMfW,EAAAA,KAAK,EAAET,QAAQ,CAAC,OAAD,EAAUF,WAAV,CANA;AAOfY,EAAAA,MAAM,EAAEV,QAAQ,CAAC,OAAD,EAAUF,WAAV,CAPD;AAQfa,EAAAA,IAAI,EAAE,CACJC,QADI,EAEJC,KAFI,EAGJC,SAHI;AAKJF,IAAAA,QALI;AAMJC,IAAAA;AANI,KAOAA,KAAK,IAAI;AACXC,IAAAA,SAAS,EAAElB,eAAe,CAAC;AACzBiB,MAAAA,KADyB;AAEzBC,MAAAA;AAFyB,KAAD;AADf,GAPT,CARS;AAsBfC,EAAAA,KAAK,EAAEf,QAAQ,CAAC,OAAD,EAAUF,WAAV,CAtBA;AAuBfkB,EAAAA,MAAM,EAAEhB,QAAQ,CAAC,OAAD,EAAUC,eAAV,CAvBD;AAwBfgB,EAAAA,OAAO,EAAEjB,QAAQ,CAAC,SAAD,CAxBF;AAyBfD,EAAAA;AAzBe,CAAV","sourcesContent":["import { isNumber } from \"@chakra-ui/utils\"\nimport { createTransform, px as pxTransform } from \"../create-transform\"\nimport type { ThemeScale } from \"../css-var\"\nimport { logical, PropConfig, toConfig } from \"../prop-config\"\n\nexport * from \"./types\"\n\nfunction fractionalValue(value: any) {\n  return !isNumber(value) || value > 1 ? value : `${value * 100}%`\n}\n\nexport const t = {\n  borderWidths: toConfig(\"borderWidths\"),\n  borderStyles: toConfig(\"borderStyles\"),\n  colors: toConfig(\"colors\"),\n  borders: toConfig(\"borders\"),\n  radii: toConfig(\"radii\", pxTransform),\n  space: toConfig(\"space\", pxTransform),\n  spaceT: toConfig(\"space\", pxTransform),\n  prop: (\n    property: PropConfig[\"property\"],\n    scale?: ThemeScale,\n    transform?: PropConfig[\"transform\"],\n  ) => ({\n    property,\n    scale,\n    ...(scale && {\n      transform: createTransform({\n        scale,\n        transform,\n      }),\n    }),\n  }),\n  sizes: toConfig(\"sizes\", pxTransform),\n  sizesT: toConfig(\"sizes\", fractionalValue),\n  shadows: toConfig(\"shadows\"),\n  logical,\n}\n"],"file":"index.js"}
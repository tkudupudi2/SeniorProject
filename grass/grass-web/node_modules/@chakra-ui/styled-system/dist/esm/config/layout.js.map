{"version":3,"sources":["../../../src/config/layout.ts"],"names":["t","layout","width","sizesT","inlineSize","height","sizes","blockSize","boxSize","minWidth","minInlineSize","minHeight","minBlockSize","maxWidth","maxInlineSize","maxHeight","maxBlockSize","d","prop","overflow","overflowX","overflowY","display","verticalAlign","boxSizing","Object","assign","w","h","minW","maxW","minH","maxH"],"mappings":"AAEA,SAAiBA,CAAjB,QAAiC,UAAjC;AAEA,OAAO,IAAMC,MAAc,GAAG;AAC5BC,EAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAAS,OAAT,CADqB;AAE5BC,EAAAA,UAAU,EAAEJ,CAAC,CAACG,MAAF,CAAS,YAAT,CAFgB;AAG5BE,EAAAA,MAAM,EAAEL,CAAC,CAACM,KAAF,CAAQ,QAAR,CAHoB;AAI5BC,EAAAA,SAAS,EAAEP,CAAC,CAACM,KAAF,CAAQ,WAAR,CAJiB;AAK5BE,EAAAA,OAAO,EAAER,CAAC,CAACM,KAAF,CAAQ,CAAC,OAAD,EAAU,QAAV,CAAR,CALmB;AAM5BG,EAAAA,QAAQ,EAAET,CAAC,CAACM,KAAF,CAAQ,UAAR,CANkB;AAO5BI,EAAAA,aAAa,EAAEV,CAAC,CAACM,KAAF,CAAQ,eAAR,CAPa;AAQ5BK,EAAAA,SAAS,EAAEX,CAAC,CAACM,KAAF,CAAQ,WAAR,CARiB;AAS5BM,EAAAA,YAAY,EAAEZ,CAAC,CAACM,KAAF,CAAQ,cAAR,CATc;AAU5BO,EAAAA,QAAQ,EAAEb,CAAC,CAACM,KAAF,CAAQ,UAAR,CAVkB;AAW5BQ,EAAAA,aAAa,EAAEd,CAAC,CAACM,KAAF,CAAQ,eAAR,CAXa;AAY5BS,EAAAA,SAAS,EAAEf,CAAC,CAACM,KAAF,CAAQ,WAAR,CAZiB;AAa5BU,EAAAA,YAAY,EAAEhB,CAAC,CAACM,KAAF,CAAQ,cAAR,CAbc;AAc5BW,EAAAA,CAAC,EAAEjB,CAAC,CAACkB,IAAF,CAAO,SAAP,CAdyB;AAe5BC,EAAAA,QAAQ,EAAE,IAfkB;AAgB5BC,EAAAA,SAAS,EAAE,IAhBiB;AAiB5BC,EAAAA,SAAS,EAAE,IAjBiB;AAkB5BC,EAAAA,OAAO,EAAE,IAlBmB;AAmB5BC,EAAAA,aAAa,EAAE,IAnBa;AAoB5BC,EAAAA,SAAS,EAAE;AApBiB,CAAvB;AAuBPC,MAAM,CAACC,MAAP,CAAczB,MAAd,EAAsB;AACpB0B,EAAAA,CAAC,EAAE1B,MAAM,CAACC,KADU;AAEpB0B,EAAAA,CAAC,EAAE3B,MAAM,CAACI,MAFU;AAGpBwB,EAAAA,IAAI,EAAE5B,MAAM,CAACQ,QAHO;AAIpBqB,EAAAA,IAAI,EAAE7B,MAAM,CAACY,QAJO;AAKpBkB,EAAAA,IAAI,EAAE9B,MAAM,CAACU,SALO;AAMpBqB,EAAAA,IAAI,EAAE/B,MAAM,CAACc;AANO,CAAtB;AASA;AACA;AACA","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../prop-config\"\nimport { Length, t, Token } from \"../utils\"\n\nexport const layout: Config = {\n  width: t.sizesT(\"width\"),\n  inlineSize: t.sizesT(\"inlineSize\"),\n  height: t.sizes(\"height\"),\n  blockSize: t.sizes(\"blockSize\"),\n  boxSize: t.sizes([\"width\", \"height\"]),\n  minWidth: t.sizes(\"minWidth\"),\n  minInlineSize: t.sizes(\"minInlineSize\"),\n  minHeight: t.sizes(\"minHeight\"),\n  minBlockSize: t.sizes(\"minBlockSize\"),\n  maxWidth: t.sizes(\"maxWidth\"),\n  maxInlineSize: t.sizes(\"maxInlineSize\"),\n  maxHeight: t.sizes(\"maxHeight\"),\n  maxBlockSize: t.sizes(\"maxBlockSize\"),\n  d: t.prop(\"display\"),\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  boxSizing: true,\n}\n\nObject.assign(layout, {\n  w: layout.width,\n  h: layout.height,\n  minW: layout.minWidth,\n  maxW: layout.maxWidth,\n  minH: layout.minHeight,\n  maxH: layout.maxHeight,\n})\n\n/**\n * Types for layout related CSS properties\n */\nexport interface LayoutProps {\n  /**\n   * The CSS `display` property\n   */\n  display?: Token<CSS.Property.Display>\n  /**\n   * The CSS `display` property\n   */\n  d?: Token<CSS.Property.Display>\n  /**\n   * The CSS `width` property\n   */\n  width?: Token<CSS.Property.Width | number, \"sizes\">\n  /**\n   * The CSS `width` property\n   */\n  w?: Token<CSS.Property.Width | number, \"sizes\">\n  inlineSize?: Token<CSS.Property.InlineSize | number, \"sizes\">\n  /**\n   * The CSS `width` and `height` property\n   */\n  boxSize?: Token<CSS.Property.Width | number, \"sizes\">\n  /**\n   * The CSS `max-width` property\n   */\n  maxWidth?: Token<CSS.Property.MaxWidth | number, \"sizes\">\n  /**\n   * The CSS `max-width` property\n   */\n  maxW?: Token<CSS.Property.MaxWidth | number, \"sizes\">\n  maxInlineSize?: Token<CSS.Property.MaxInlineSize | number, \"sizes\">\n  /**\n   * The CSS `min-width` property\n   */\n  minWidth?: Token<CSS.Property.MinWidth | number, \"sizes\">\n  /**\n   * The CSS `min-width` property\n   */\n  minW?: Token<CSS.Property.MinWidth | number, \"sizes\">\n  minInlineSize?: Token<CSS.Property.MinInlineSize | number, \"sizes\">\n  /**\n   * The CSS `height` property\n   */\n  height?: Token<CSS.Property.Height | number, \"sizes\">\n  /**\n   * The CSS `height` property\n   */\n  h?: Token<CSS.Property.Height | number, \"sizes\">\n  blockSize?: Token<CSS.Property.BlockSize | number, \"sizes\">\n  /**\n   * The CSS `max-height` property\n   */\n  maxHeight?: Token<CSS.Property.MaxHeight | number, \"sizes\">\n  /**\n   * The CSS `max-height` property\n   */\n  maxH?: Token<CSS.Property.MaxHeight | number, \"sizes\">\n  maxBlockSize?: Token<CSS.Property.MaxBlockSize | number, \"sizes\">\n  /**\n   * The CSS `min-height` property\n   */\n  minHeight?: Token<CSS.Property.MinHeight | number, \"sizes\">\n  /**\n   * The CSS `min-height` property\n   */\n  minH?: Token<CSS.Property.MinHeight | number, \"sizes\">\n  minBlockSize?: Token<CSS.Property.MinBlockSize | number, \"sizes\">\n  /**\n   * The CSS `vertical-align` property\n   */\n  verticalAlign?: Token<CSS.Property.VerticalAlign<Length>>\n  /**\n   * The CSS `overflow` property\n   */\n  overflow?: Token<CSS.Property.Overflow>\n  /**\n   * The CSS `overflow-x` property\n   */\n  overflowX?: Token<CSS.Property.OverflowX>\n  /**\n   * The CSS `overflow-y` property\n   */\n  overflowY?: Token<CSS.Property.OverflowY>\n  /**\n   * The CSS `box-sizing` property\n   */\n  boxSizing?: CSS.Property.BoxSizing\n}\n"],"file":"layout.js"}
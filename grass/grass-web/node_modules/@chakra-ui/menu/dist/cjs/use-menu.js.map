{"version":3,"sources":["../../src/use-menu.ts"],"names":["MenuDescendantsProvider","useMenuDescendantsContext","useMenuDescendants","useMenuDescendant","strict","name","MenuProvider","useMenuContext","useMenu","props","id","closeOnSelect","closeOnBlur","autoSelect","isLazy","isOpenProp","isOpen","defaultIsOpen","onCloseProp","onClose","onOpenProp","onOpen","placement","lazyBehavior","popperProps","onToggle","menuRef","React","useRef","buttonRef","ref","handler","event","current","contains","target","popper","useState","focusedIndex","setFocusedIndex","descendants","focusRef","visible","shouldFocus","buttonId","menuId","openAndFocusMenu","useCallback","nextTick","openAndFocusFirstItem","first","firstEnabled","index","openAndFocusLastItem","last","lastEnabled","refocus","doc","hasFocusWithin","activeElement","shouldRefocus","el","item","node","onTransitionEnd","forceUpdate","orientation","useMenuButton","externalRef","menu","onClick","action","onKeyDown","eventKey","keyMap","Enter","ArrowDown","ArrowUp","preventDefault","stopPropagation","referenceRef","isTargetMenuItem","currentTarget","getAttribute","useMenuList","Error","createTypeaheadHandler","isMenuItem","key","Tab","Escape","next","nextEnabled","prev","prevEnabled","fn","onTypeahead","character","nextItem","values","textContent","indexOf","hasBeenOpened","shouldRenderChildren","hasBeenSelected","isSelected","children","tabIndex","role","style","transformOrigin","useMenuPositioner","getPopperProps","visibility","useMenuItem","onMouseEnterProp","onMouseEnter","onMouseMoveProp","onMouseMove","onMouseLeaveProp","onMouseLeave","onClickProp","isDisabled","isFocusable","htmlProps","menuCloseOnSelect","disabled","register","isFocused","trulyDisabled","clickableProps","useMenuOption","type","isChecked","menuItemProps","ownProps","useMenuOptionGroup","valueProp","value","defaultValue","onChangeProp","onChange","isRadio","fallback","setValue","selectedValue","nextValue","includes","validChildren","clones","map","child","cloneElement","useMenuState"],"mappings":"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","sourcesContent":["import { useClickable } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport {\n  useControllableState,\n  useDisclosure,\n  UseDisclosureProps,\n  useFocusOnHide,\n  useId,\n  useIds,\n  useOutsideClick,\n  useShortcut,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  createContext,\n  EventKeyMap,\n  getValidChildren,\n  mergeRefs,\n} from \"@chakra-ui/react-utils\"\nimport {\n  addItem,\n  callAllHandlers,\n  dataAttr,\n  determineLazyBehavior,\n  focus,\n  getNextItemFromSearch,\n  getOwnerDocument,\n  isActiveElement,\n  isArray,\n  isString,\n  LazyBehavior,\n  normalizeEventKey,\n  removeItem,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant,\n] = createDescendantContext<HTMLElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [MenuProvider, useMenuContext] = createContext<\n  Omit<UseMenuReturn, \"descendants\">\n>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuProps extends UsePopperProps, UseDisclosureProps {\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will receive focus and be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * Performance 🚀:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of menu's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The menu's content is always unmounted when not open.\n   * - \"keepMounted\": The menu's content initially unmounted,\n   * but stays mounted when menu is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyBehavior\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props: UseMenuProps = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    ...popperProps\n  } = props\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n  })\n\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = React.useRef<HTMLDivElement>(null)\n  const buttonRef = React.useRef<HTMLButtonElement>(null)\n\n  useOutsideClick({\n    ref: menuRef,\n    handler: (event) => {\n      if (\n        isOpen &&\n        closeOnBlur &&\n        !buttonRef.current?.contains(event.target as HTMLElement)\n      ) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const popper = usePopper({\n    ...popperProps,\n    placement,\n  })\n\n  const [focusedIndex, setFocusedIndex] = React.useState(-1)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const descendants = useMenuDescendants()\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true,\n  })\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  const openAndFocusMenu = React.useCallback(() => {\n    onOpen()\n    focus(menuRef.current, { nextTick: true })\n  }, [onOpen, menuRef])\n\n  const openAndFocusFirstItem = React.useCallback(() => {\n    onOpen()\n    const first = descendants.firstEnabled()\n    if (first) setFocusedIndex(first.index)\n  }, [onOpen, setFocusedIndex, descendants])\n\n  const openAndFocusLastItem = React.useCallback(() => {\n    onOpen()\n    const last = descendants.lastEnabled()\n    if (last) setFocusedIndex(last.index)\n  }, [onOpen, setFocusedIndex, descendants])\n\n  const refocus = React.useCallback(() => {\n    const doc = getOwnerDocument(menuRef.current)\n    const hasFocusWithin = menuRef.current?.contains(doc.activeElement)\n    const shouldRefocus = isOpen && !hasFocusWithin\n\n    if (!shouldRefocus) return\n\n    const el = descendants.item(focusedIndex)?.node\n    if (el) focus(el)\n  }, [isOpen, focusedIndex, descendants])\n\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuButton hook\n * -----------------------------------------------------------------------------------------------*/\nexport interface UseMenuButtonProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(\n  props: UseMenuButtonProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  const {\n    isOpen,\n    onClose,\n    autoSelect,\n    popper,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    openAndFocusMenu,\n  } = menu\n\n  const onClick = React.useCallback(() => {\n    if (isOpen) {\n      onClose()\n    } else {\n      const action = autoSelect ? openAndFocusFirstItem : openAndFocusMenu\n      action()\n    }\n  }, [autoSelect, isOpen, onClose, openAndFocusFirstItem, openAndFocusMenu])\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onClick),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nfunction isTargetMenuItem(event: Pick<MouseEvent, \"currentTarget\">) {\n  const target = event.currentTarget as HTMLElement\n  return target.getAttribute(\"role\") === \"menuitem\"\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuListProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(\n  props: UseMenuListProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n  } = menu\n\n  const descendants = useMenuDescendantsContext()\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: (event) => {\n      const isMenuItem = isTargetMenuItem(event)\n      return event.key !== \" \" && isMenuItem\n    },\n  })\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n\n      const keyMap: EventKeyMap = {\n        Tab: (event) => event.preventDefault(),\n        Escape: onClose,\n        ArrowDown: () => {\n          const next = descendants.nextEnabled(focusedIndex)\n          if (next) setFocusedIndex(next.index)\n        },\n        ArrowUp: () => {\n          const prev = descendants.prevEnabled(focusedIndex)\n          if (prev) setFocusedIndex(prev.index)\n        },\n      }\n\n      const fn = keyMap[eventKey]\n\n      if (fn) {\n        event.preventDefault()\n        fn(event)\n        return\n      }\n\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      const onTypeahead = createTypeaheadHandler((character) => {\n        const nextItem = getNextItemFromSearch(\n          descendants.values(),\n          character,\n          (item) => item?.node?.textContent ?? \"\",\n          descendants.item(focusedIndex),\n        )\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem.node)\n          setFocusedIndex(index)\n        }\n      })\n\n      onTypeahead(event)\n    },\n    [\n      descendants,\n      focusedIndex,\n      createTypeaheadHandler,\n      onClose,\n      setFocusedIndex,\n    ],\n  )\n\n  const hasBeenOpened = React.useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy,\n    lazyBehavior,\n    isSelected: isOpen,\n  })\n\n  return {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\",\n    },\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props: any = {}) {\n  const { popper, isOpen } = useMenuContext()\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style,\n    },\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuItemProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {\n  /**\n   * If `true`, the menuitem will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and the menuitem is disabled, it'll\n   * remain keyboard-focusable\n   */\n  isFocusable?: boolean\n  /**\n   * Overrides the parent menu's `closeOnSelect` prop.\n   */\n  closeOnSelect?: boolean\n}\n\nexport function useMenuItem(\n  props: UseMenuItemProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n  } = menu\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const id = `${menuId}-menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const { index, register } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const onMouseEnter = React.useCallback(\n    (event) => {\n      onMouseEnterProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n  )\n\n  const onMouseMove = React.useCallback(\n    (event) => {\n      onMouseMoveProp?.(event)\n      if (ref.current && !isActiveElement(ref.current)) {\n        onMouseEnter(event)\n      }\n    },\n    [onMouseEnter, onMouseMoveProp],\n  )\n\n  const onMouseLeave = React.useCallback(\n    (event) => {\n      onMouseLeaveProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(-1)\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp],\n  )\n\n  const onClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      onClickProp?.(event)\n      if (!isTargetMenuItem(event)) return\n      /**\n       * Close menu and parent menus, allowing the MenuItem\n       * to override its parent menu's `closeOnSelect` prop.\n       */\n      if (closeOnSelect ?? menuCloseOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, menuCloseOnSelect, closeOnSelect],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (!isOpen) return\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current, { nextTick: true })\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      focus(menuRef.current)\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n  const clickableProps = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends UseMenuItemProps,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(\n  props: UseMenuOptionProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const { type = \"radio\", isChecked, ...menuItemProps } = props\n  const ownProps = useMenuItem(menuItemProps, ref)\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  const onChange = React.useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && isString(value)) {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? removeItem(value, selectedValue)\n          : addItem(value, selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      onChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return React.cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n"],"file":"use-menu.js"}
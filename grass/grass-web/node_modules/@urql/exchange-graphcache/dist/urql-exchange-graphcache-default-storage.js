"use strict";

function _ref(a) {
  return a.replace(/:/g, "%3a");
}

function _ref2(a) {
  return a.replace(/%3a/g, ":");
}

function _ref5() {
  return null;
}

function _ref6() {}

function _ref7() {}

function _onOnline(a) {
  window.addEventListener("online", (function() {
    a();
  }));
}

var _rollupPluginBabelHelpers = require("./7832a774.js"), getRequestPromise = function(a) {
  return new Promise((function(d, e) {
    a.onerror = function() {
      e(a.error);
    };
    a.onsuccess = function() {
      d(a.result);
    };
  }));
}, getTransactionPromise = function(a) {
  return new Promise((function(d, e) {
    a.onerror = function() {
      e(a.error);
    };
    a.oncomplete = d;
  }));
}, makeDefaultStorage = function(a) {
  function d(b) {
    (b = b.transaction("metadata", "readwrite")).objectStore("metadata").clear();
    b.objectStore("entries").clear();
    return getTransactionPromise(b);
  }
  function e(b) {
    return getRequestPromise(b.transaction("metadata", "readonly").objectStore("metadata").get("metadata"));
  }
  function r(b) {
    return getRequestPromise(b.transaction("entries", "readwrite").objectStore("entries").put(t(), l));
  }
  function u() {
    return g;
  }
  var v, g, l, w, k, h, n, p, t, q;
  a || (a = {});
  v = a.idbName || "graphcache-v4", g = Object.create(null), l = Math.floor((new Date).valueOf() / 864e5), 
  w = l - (a.maxAge || 7), k = indexedDB.open(v, 1), h = getRequestPromise(k);
  k.onupgradeneeded = function() {
    k.result.createObjectStore("entries");
    k.result.createObjectStore("metadata");
  };
  n = _ref, p = _ref2, t = function() {
    var a, c, b = "";
    for (a in g) {
      c = g[a];
      b += n(a);
      b += ":";
      c && (b += n(c));
      b += ":";
    }
    return b;
  }, q = function(b) {
    for (var f, a = {}, c = "", d = "", m = 0, e = 0; e < b.length; ) {
      for (f = ""; ":" !== (c = b[e++]) && c; ) {
        f += c;
      }
      m ? (a[d] = p(f) || void 0, m = 0) : (d = p(f), m = 1);
    }
    return a;
  };
  return {
    clear: function() {
      return h.then(d);
    },
    readMetadata: function() {
      return h.then(e, _ref5);
    },
    writeMetadata: function(b) {
      h.then((function(a) {
        return getRequestPromise(a.transaction("metadata", "readwrite").objectStore("metadata").put(b, "metadata"));
      }), _ref6);
    },
    writeData: function(b) {
      _rollupPluginBabelHelpers._extends(g, b);
      b = _ref7;
      return h.then(r).then(b, b);
    },
    readData: function() {
      var b = [];
      return h.then((function(a) {
        var c = (a = a.transaction("entries", "readwrite")).objectStore("entries");
        (c.openKeyCursor || c.openCursor).call(c).onsuccess = function() {
          var f, d, e;
          if (this.result) {
            if ("number" != typeof (f = this.result.key) || f < w) {
              c.delete(f);
            } else {
              d = c.get(f), e = b.length;
              b.push("");
              d.onsuccess = function a() {
                var a = "" + d.result;
                f === l && _rollupPluginBabelHelpers._extends(g, q(a));
                b[e] = a;
              };
            }
            this.result.continue();
          }
        };
        return getTransactionPromise(a);
      })).then((function() {
        return q(b.join(""));
      }), u);
    },
    onOnline: _onOnline
  };
};

exports.makeDefaultStorage = makeDefaultStorage;
//# sourceMappingURL=urql-exchange-graphcache-default-storage.js.map

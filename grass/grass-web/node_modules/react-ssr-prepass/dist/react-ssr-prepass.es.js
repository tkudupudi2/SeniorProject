import React, { Children, createElement } from "react";

function f() {
  return (f = Object.assign || function(a) {
    for (var b = 1; b < arguments.length; b++) {
      var c, d = arguments[b];
      for (c in d) {
        Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
      }
    }
    return a;
  }).apply(this, arguments);
}

var Element = 60103, h = 60106, k = 60107, aa = 60108, ba = 60114, ca = 60109, da = 60110, ea = 60111, fa = 60112, ha = 60113, ia = 60115, ja = 60116;

if ("function" == typeof Symbol && Symbol.for) {
  var l = Symbol.for;
  Element = l("react.element");
  h = l("react.portal");
  k = l("react.fragment");
  aa = l("react.strict_mode");
  ba = l("react.profiler");
  ca = l("react.provider");
  da = l("react.context");
  ea = Symbol.for("react.concurrent_mode");
  fa = l("react.forward_ref");
  ha = l("react.suspense");
  ia = l("react.memo");
  ja = l("react.lazy");
}

var n = Element, ka = h, q = k, r = aa, t = ba, u = ca, v = da, x = ea, z = fa, A = ha, B = ia, C = ja;

var ma = Children.toArray;

function na(a) {
  return null !== a && "object" == typeof a;
}

function D(a) {
  return ma(a).filter(na);
}

function E(a, b) {
  return "object" == typeof b ? f({}, b, a) : a;
}

var F = new Map, G = {}, H = void 0, I = void 0;

function oa() {
  var a = H;
  H = void 0;
  return a;
}

function pa() {
  var a = I;
  I = void 0;
  return a;
}

function J(a) {
  H = void 0;
  G = a;
}

function K(a) {
  I = void 0;
  F = a;
}

function L(a) {
  var b = F.get(a);
  return void 0 !== b ? b : a._currentValue;
}

var qa = {};

function ra(a) {
  var b = a.contextType;
  a = a.contextTypes;
  if (b) {
    return L(b);
  }
  if (!a) {
    return qa;
  }
  b = {};
  for (var d in a) {
    b[d] = G[d];
  }
  return b;
}

var M = null, N = {
  current: {
    uniqueID: 0
  }
};

var ta = "function" == typeof Object.is ? Object.is : function sa(a, b) {
  return a === b && (0 !== a || 1 / a == 1 / b) || a != a && b != b;
}, O = null;

function P() {
  if (null === O) {
    throw Error("[react-ssr-prepass] Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)");
  }
  return O;
}

var Q = null, R = null, S = !1, T = null, U = 0;

function V() {
  return null === R ? null === Q ? Q = R = {
    memoizedState: null,
    queue: null,
    next: null
  } : R = Q : null === R.next ? R = R.next = {
    memoizedState: null,
    queue: null,
    next: null
  } : R = R.next;
}

function va(a, b) {
  return "function" == typeof b ? b(a) : b;
}

function wa(a, b, d) {
  var c = P();
  null === (R = V()).queue && (b = a === va ? "function" == typeof b ? b() : b : void 0 !== d ? d(b) : b, 
  R.memoizedState = b);
  c = (b = R.queue || (R.queue = {
    last: null,
    dispatch: null
  })).dispatch || (b.dispatch = xa.bind(null, c, b));
  if (null !== T && void 0 !== (d = T.get(b))) {
    T.delete(b);
    b = R.memoizedState;
    do {
      b = a(b, d.action), d = d.next;
    } while (null !== d);
    R.memoizedState = b;
  }
  return [ R.memoizedState, c ];
}

function ya(a, b) {
  P();
  b = void 0 === b ? null : b;
  var d = (R = V()).memoizedState;
  if (null !== d && null !== b) {
    a: {
      var c = d[1];
      if (null === c) {
        c = !1;
      } else {
        for (var e = 0; e < c.length && e < b.length; e++) {
          if (!ta(b[e], c[e])) {
            c = !1;
            break a;
          }
        }
        c = !0;
      }
    }
    if (c) {
      return d[0];
    }
  }
  a = a();
  R.memoizedState = [ a, b ];
  return a;
}

function xa(a, b, d) {
  if (a === O) {
    if (S = !0, a = {
      action: d,
      next: null
    }, null === T && (T = new Map), void 0 === (d = T.get(b))) {
      T.set(b, a);
    } else {
      for (b = d; null !== b.next; ) {
        b = b.next;
      }
      b.next = a;
    }
  }
}

function W() {}

function Ba(a) {
  a();
}

var Ca = {
  readContext: function(a) {
    return L(a);
  },
  useContext: function(a) {
    P();
    return L(a);
  },
  useMemo: ya,
  useReducer: wa,
  useRef: function(a) {
    P();
    var b = (R = V()).memoizedState;
    return null === b ? R.memoizedState = a = {
      current: a
    } : b;
  },
  useState: function(a) {
    return wa(va, a);
  },
  useCallback: function(a, b) {
    return ya((function() {
      return a;
    }), b);
  },
  useMutableSource: function(a, b) {
    P();
    return b(a._source);
  },
  useTransition: function() {
    return [ Ba, !1 ];
  },
  useDeferredValue: function(a) {
    return a;
  },
  useOpaqueIdentifier: function() {
    P();
    (R = V()).memoizedState || (R.memoizedState = "R:" + (N.current.uniqueID++).toString(36));
    return R.memoizedState;
  },
  useLayoutEffect: W,
  useImperativeHandle: W,
  useEffect: W,
  useDebugValue: W
};

function Da(a) {
  var b = a._payload || a;
  if (0 === b._status) {
    return b._result;
  }
  if (1 === b._status) {
    return Promise.resolve(b._result);
  }
  if (2 === b._status) {
    return Promise.reject(b._result);
  }
  b._status = 0;
  return b._result = (b._ctor || b._result)().then((function(a) {
    b._result = a;
    "function" == typeof a ? b._status = 1 : null !== a && "object" == typeof a && "function" == typeof a.default ? (b._result = a.default, 
    b._status = 1) : b._status = 2;
  })).catch((function(a) {
    b._status = 2;
    b._result = a;
    return Promise.reject(a);
  }));
}

function Ea(a, b) {
  return 1 === (a = a._payload || a)._status ? createElement(a._result, b) : null;
}

function Fa(a, b, d) {
  return {
    contextMap: f({}, G),
    contextStore: new Map(F),
    id: P(),
    hook: Q,
    kind: "frame.hooks",
    errorFrame: M,
    thenable: d,
    props: b,
    type: a
  };
}

function Ga(a, b, d) {
  try {
    var c = E(b, a.defaultProps), e = ra(a);
    R = null;
    for (var g = a(c, e); 25 > U && S; ) {
      S = !1, U += 1, R = null, g = a(c, e);
    }
    U = 0;
    R = T = null;
    return g;
  } catch (p) {
    if ("function" != typeof p.then) {
      throw p;
    }
    d.push(Fa(a, b, p));
    return null;
  }
}

function Ha() {
  return !1;
}

function Ia() {
  return null;
}

function Y(a, b, d) {
  return {
    contextMap: f({}, G),
    contextStore: new Map(F),
    errorFrame: M,
    thenable: d,
    kind: "frame.class",
    error: null,
    instance: b,
    type: a
  };
}

function Ka(a, b, d) {
  var c = b.updater.queue;
  if (0 < c.length) {
    for (var e = f({}, b.state), g = 0, p = c.length; g < p; g++) {
      var m = c[g];
      null !== (m = "function" == typeof m ? m.call(b, e, b.props, b.context) : m) && f(e, m);
    }
    b.state = e;
    c.length = 0;
  }
  c = null;
  try {
    c = b.render();
  } catch (y) {
    if ("function" != typeof y.then) {
      throw y;
    }
    d.push(Y(a, b, y));
    return null;
  }
  if (void 0 !== a.childContextTypes && "function" == typeof b.getChildContext && (null !== (a = b.getChildContext()) && "object" == typeof a)) {
    H = {};
    for (var w in a) {
      H[w] = G[w], G[w] = a[w];
    }
  }
  if ("function" != typeof b.getDerivedStateFromProps && ("function" == typeof b.componentWillMount || "function" == typeof b.UNSAFE_componentWillMount) && "function" == typeof b.componentWillUnmount) {
    try {
      b.componentWillUnmount();
    } catch (y) {}
  }
  b._isMounted = !1;
  return c;
}

var Z = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher, La = "function" == typeof setImmediate;

function Ma(a, b, d) {
  switch (function la(a) {
    switch (a.$$typeof) {
     case ka:
      return ka;

     case n:
      switch (a.type) {
       case x:
        return x;

       case q:
        return q;

       case t:
        return t;

       case r:
        return r;

       case A:
        return A;

       default:
        switch (a.type && a.type.$$typeof) {
         case C:
          return C;

         case B:
          return B;

         case v:
          return v;

         case u:
          return u;

         case z:
          return z;

         default:
          return n;
        }
      }
    }
  }(a)) {
   case A:
   case r:
   case x:
   case t:
   case q:
    return D(a.props.children);

   case u:
    var c = a.props;
    b = c.children;
    c = c.value;
    I = [ a = a.type._context, F.get(a) ];
    F.set(a, c);
    return D(b);

   case v:
    return "function" == typeof (b = a.props.children) ? D(b(a = L("object" == typeof (a = a.type)._context ? a._context : a))) : [];

   case C:
    return c = a.type, a = a.props, 0 >= (c._payload || c)._status ? (b.push({
      kind: "frame.lazy",
      contextMap: f({}, G),
      contextStore: new Map(F),
      errorFrame: M,
      thenable: Da(c),
      props: a,
      type: c
    }), a = null) : a = Ea(c, a), D(a);

   case B:
    return D(a = createElement(a.type.type, a.props));

   case z:
    return b = (c = a.type).render, a = E(a.props, c.defaultProps), D(a = createElement(b, a));

   case n:
    if ("string" == typeof a.type) {
      return D(a.props.children);
    }
    var e = a.props;
    if ((c = a.type).prototype && c.prototype.isReactComponent) {
      O = null;
      var g = function Ja() {
        var a = [];
        return {
          _thrown: 0,
          queue: a,
          isMounted: Ha,
          enqueueForceUpdate: Ia,
          enqueueReplaceState: function(b, d) {
            b._isMounted && (a.length = 0, a.push(d));
          },
          enqueueSetState: function(b, d) {
            b._isMounted && a.push(d);
          }
        };
      }(), p = E(e, c.defaultProps), m = ra(c);
      (e = new c(p, m, g)).props = p;
      e.context = m;
      e.updater = g;
      e._isMounted = !0;
      void 0 === e.state && (e.state = null);
      if ("function" == typeof e.componentDidCatch || "function" == typeof c.getDerivedStateFromError) {
        g = Y(c, e, null), M = (g.errorFrame = g) || null;
      }
      "function" == typeof c.getDerivedStateFromProps ? null != (g = (g = c.getDerivedStateFromProps)(e.props, e.state)) && (e.state = f({}, e.state, g)) : "function" == typeof e.componentWillMount ? e.componentWillMount() : "function" == typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount();
      (a = d(a, e)) ? (b.push(Y(c, e, a)), a = null) : a = Ka(c, e, b);
    } else {
      Q = null, O = {}, (a = d(a)) ? (b.push(Fa(c, e, a)), a = null) : a = Ga(c, e, b);
    }
    return D(a);

   default:
    return [];
  }
}

function Na(a, b, d, c, e, g) {
  var p = Z.current, m = Date.now();
  try {
    for (Z.current = Ca; 0 < a.length; ) {
      var w = a[a.length - 1].shift();
      if (void 0 !== w) {
        var y = Ma(w, e, g);
        a.push(y);
        b.push(oa());
        d.push(pa());
        c.push(M);
      } else {
        a.pop();
        var za = b.pop();
        void 0 !== za && f(G, za);
        var X = d.pop();
        void 0 !== X && F.set(X[0], X[1]);
        M = c.pop() || null;
      }
      if (La && 5 < Date.now() - m) {
        return !0;
      }
    }
    return !1;
  } catch (Aa) {
    if (!(a = M)) {
      throw Aa;
    }
    a.error = Aa;
    e.unshift(a);
    return !1;
  } finally {
    Z.current = p;
  }
}

function Oa(a, b, d, c) {
  return {
    contextMap: f({}, G),
    contextStore: new Map(F),
    errorFrame: M,
    thenable: null,
    kind: "frame.yield",
    traversalChildren: a,
    traversalMap: b,
    traversalStore: d,
    traversalErrorFrame: c
  };
}

function Pa(a, b, d) {
  a = [ a ];
  var c = [ oa() ], e = [ pa() ], g = [ M ];
  Na(a, c, e, g, b, d) && b.unshift(Oa(a, c, e, g));
}

function Qa(a, b, d) {
  if ("frame.yield" === a.kind) {
    O = null, J(a.contextMap), K(a.contextStore), M = a.errorFrame || null, Na(a.traversalChildren, a.traversalMap, a.traversalStore, a.traversalErrorFrame, b, d) && b.unshift(Oa(a.traversalChildren, a.traversalMap, a.traversalStore, a.traversalErrorFrame));
  } else {
    var c = Z.current, e = null;
    Z.current = Ca;
    try {
      if ("frame.class" === a.kind) {
        a: {
          O = null;
          J(a.contextMap);
          K(a.contextStore);
          M = a.errorFrame || null;
          if (a.error) {
            if (25 <= ++a.instance.updater._thrown) {
              e = null;
              break a;
            }
            a.instance._isMounted = !0;
            "function" == typeof a.instance.componentDidCatch && a.instance.componentDidCatch(a.error);
            "function" == typeof a.type.getDerivedStateFromError && a.instance.updater.enqueueSetState(a.instance, a.type.getDerivedStateFromError(a.error));
          }
          e = Ka(a.type, a.instance, b);
        }
      } else {
        "frame.hooks" === a.kind ? (Q = a.hook, O = a.id, J(a.contextMap), K(a.contextStore), 
        M = a.errorFrame || null, e = Ga(a.type, a.props, b)) : "frame.lazy" === a.kind && (O = null, 
        J(a.contextMap), K(a.contextStore), M = a.errorFrame || null, e = Ea(a.type, a.props));
      }
    } catch (g) {
      if (!(a = M)) {
        throw g;
      }
      a.error = g;
      b.unshift(a);
      e = null;
    } finally {
      Z.current = c;
    }
    Pa(D(e), b, d);
  }
}

function Ra(a) {
  setImmediate(a);
}

function Sa(a, b, d) {
  var c = a.shift();
  if (!c) {
    return Promise.resolve();
  }
  La && "frame.yield" === c.kind && (c.thenable = new Promise(Ra));
  return Promise.resolve(c.thenable).then((function() {
    N.current = d;
    Qa(c, a, b);
    return Sa(a, b, d);
  }), (function(d) {
    if (!c.errorFrame) {
      throw d;
    }
    c.errorFrame.error = d;
    Qa(c.errorFrame, a, b);
  }));
}

function Ta() {}

export default function(a, b) {
  b || (b = Ta);
  var d = [], c = N.current = {
    uniqueID: 0
  };
  J({});
  K(new Map);
  M = null;
  try {
    Pa(D(a), d, b);
  } catch (e) {
    return Promise.reject(e);
  }
  return Sa(d, b, c);
}
//# sourceMappingURL=react-ssr-prepass.es.js.map

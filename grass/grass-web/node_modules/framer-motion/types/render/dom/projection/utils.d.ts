import { VisualElement } from "../../types";
export declare function updateTreeLayoutMeasurements(visualElement: VisualElement, isRelativeDrag: boolean): void;
export declare function collectProjectingChildren(visualElement: VisualElement): VisualElement[];
/**
 * Perform the callback after temporarily unapplying the transform
 * upwards through the tree.
 */
export declare function withoutTreeTransform(visualElement: VisualElement, callback: () => void): void;
/**
 * Update the layoutState by measuring the DOM layout. This
 * should be called after resetting any layout-affecting transforms.
 */
export declare function updateLayoutMeasurement(visualElement: VisualElement): void;
/**
 * Record the viewport box as it was before an expected mutation/re-render
 */
export declare function snapshotViewportBox(visualElement: VisualElement): void;
export declare function batchResetAndMeasure(order: VisualElement[]): void;

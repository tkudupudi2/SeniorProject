{"ast":null,"code":"import _slicedToArray from \"/Users/alan/Desktop/Projects/SeniorProject/grass/grass-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nimport { useMeQuery } from \"../generated/graphql\";\nexport var useIsAuth = function useIsAuth() {\n  _s();\n\n  var _useMeQuery = useMeQuery(),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var router = useRouter();\n  useEffect(function () {\n    if (!fetching && !(data !== null && data !== void 0 && data.me)) {\n      router.replace(\"/login?next=\" + router.pathname);\n    }\n  }, [fetching, data, router]);\n};\n\n_s(useIsAuth, \"nVIRD6FggEioIuRI8oM71i6UBAU=\", false, function () {\n  return [useMeQuery, useRouter];\n});","map":{"version":3,"sources":["/Users/alan/Desktop/Projects/SeniorProject/grass/grass-web/src/utils/useIsAuth.ts"],"names":["useRouter","useEffect","useMeQuery","useIsAuth","data","fetching","router","me","replace","pathname"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,oBACAD,UAAU,EADV;AAAA;AAAA;AAAA,MACpBE,IADoB,iBACpBA,IADoB;AAAA,MACdC,QADc,iBACdA,QADc;;AAE7B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACI,QAAD,IAAa,EAACD,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEG,EAAP,CAAjB,EAA4B;AAC1BD,MAAAA,MAAM,CAACE,OAAP,CAAe,iBAAiBF,MAAM,CAACG,QAAvC;AACD;AACF,GAJQ,EAIN,CAACJ,QAAD,EAAWD,IAAX,EAAiBE,MAAjB,CAJM,CAAT;AAKD,CARM;;GAAMH,S;UACkBD,U,EACdF,S","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nimport { useMeQuery } from \"../generated/graphql\";\n\nexport const useIsAuth = () => {\n  const [{ data, fetching }] = useMeQuery();\n  const router = useRouter();\n  useEffect(() => {\n    if (!fetching && !data?.me) {\n      router.replace(\"/login?next=\" + router.pathname);\n    }\n  }, [fetching, data, router]);\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alan/Desktop/Projects/tutorial-web/src/components/Container.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Flex, useColorMode } from '@chakra-ui/react';\nexport const Container = props => {\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: 'gray.50',\n    dark: 'gray.900'\n  };\n  const color = {\n    light: 'black',\n    dark: 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, _objectSpread({\n    direction: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    bg: bgColor[colorMode],\n    color: color[colorMode]\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/alan/Desktop/Projects/tutorial-web/src/components/Container.js"],"names":["Flex","useColorMode","Container","props","colorMode","bgColor","light","dark","color"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,EAAeC,YAAf,QAAmC,kBAAnC;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,YAAY,EAAlC;AAEA,QAAMI,OAAO,GAAG;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAAhB;AAEA,QAAMC,KAAK,GAAG;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAd;AACA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,cAAc,EAAC,YAHjB;AAIE,IAAA,EAAE,EAAEF,OAAO,CAACD,SAAD,CAJb;AAKE,IAAA,KAAK,EAAEI,KAAK,CAACJ,SAAD;AALd,KAMMD,KANN;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhBM","sourcesContent":["import { Flex, useColorMode } from '@chakra-ui/react'\n\nexport const Container = (props) => {\n  const { colorMode } = useColorMode()\n\n  const bgColor = { light: 'gray.50', dark: 'gray.900' }\n\n  const color = { light: 'black', dark: 'white' }\n  return (\n    <Flex\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"flex-start\"\n      bg={bgColor[colorMode]}\n      color={color[colorMode]}\n      {...props}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alan/Desktop/Projects/SeniorProject/grass/grass-web/src/pages/change-password/[token].tsx\";\nimport { Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport React from \"react\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\nexport const ChangePassword = ({\n  token\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        newPassword: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {// const response = await login(values);\n        // if (response.data?.login.errors) {\n        //   setErrors(toErrorMap(response.data.login.errors));\n        // } else if (response.data?.login.user) {\n        //   router.push(\"/\");\n        // }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"newPassword\",\n          placeholder: \"new password\",\n          label: \"New Password\",\n          type: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          type: \"submit\",\n          isLoading: isSubmitting,\n          colorScheme: \"whatsapp\",\n          children: \"change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/Users/alan/Desktop/Projects/SeniorProject/grass/grass-web/src/pages/change-password/[token].tsx"],"names":["Button","Formik","Form","React","InputField","Wrapper","ChangePassword","token","newPassword","values","setErrors","isSubmitting","getInitialProps","query"],"mappings":";;AAAA,SAAcA,MAAd,QAA4B,kBAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAIA,OAAO,MAAMC,cAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACxE,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC,CACzC;AACA;AACA;AACA;AACA;AACA;AACD,OATH;AAAA,gBAWG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,KAAK,EAAC,cAHR;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAEA,YAHb;AAIE,UAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAnCM;;AAqCPL,cAAc,CAACM,eAAf,GAAiC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9C,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeD,cAAf","sourcesContent":["import { Box, Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport { NextPage } from \"next\";\nimport router from \"next/dist/next-server/lib/router/router\";\nimport React from \"react\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\nimport login from \"../login\";\n\nexport const ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ newPassword: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          // const response = await login(values);\n          // if (response.data?.login.errors) {\n          //   setErrors(toErrorMap(response.data.login.errors));\n          // } else if (response.data?.login.user) {\n          //   router.push(\"/\");\n          // }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"newPassword\"\n              placeholder=\"new password\"\n              label=\"New Password\"\n              type=\"Password\"\n            />\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              colorScheme=\"whatsapp\"\n            >\n              change password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}
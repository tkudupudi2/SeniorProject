{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { withUrqlClient } from \"next-urql\";\n\nconst Login = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return /*#__PURE__*/_jsx(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsx(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await login({\n          options: values\n        });\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n          setErrors(toErrorMap(response.data.login.errors));\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user) {\n          router.push(\"/\");\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxs(Form, {\n        children: [/*#__PURE__*/_jsx(InputField, {\n          name: \"username\",\n          placeholder: \"username\",\n          label: \"username\"\n        }), /*#__PURE__*/_jsx(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsx(InputField, {\n            name: \"password\",\n            placeholder: \"password\",\n            label: \"password\",\n            type: \"password\"\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          mt: 4,\n          type: \"submit\",\n          isLoading: isSubmitting,\n          colorScheme: \"whatsapp\",\n          children: \"login\"\n        })]\n      })\n    })\n  });\n};\n\nexport default withUrqlClient(createUrqlClient)(Login);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alan/Desktop/Projects/tutorial-web/src/components/NavBar.tsx\";\nimport { Text, Box, Flex, Link, Icon } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport NextLink from \"next/link\";\nimport { useLoginMutation, useMeQuery } from \"../generated/graphql\";\nimport { SettingsIcon } from \"@chakra-ui/icons\";\nexport const NavBar = () => {\n  const [{\n    data,\n    fetching\n  }] = useMeQuery();\n  const [, logout] = useLoginMutation();\n  let body = null;\n\n  if (fetching) {} else if (!(data !== null && data !== void 0 && data.me)) {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          mr: 2,\n          color: \"white\",\n          fontSize: \"m\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          color: \"white\",\n          fontSize: \"m\",\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: 6,\n        color: \"white\",\n        fontSize: \"sm\",\n        fontWeight: \"semibold\",\n        children: [\"Welcome, \", data.me.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        onClick: () => {\n          logout();\n        },\n        color: \"white\",\n        as: SettingsIcon,\n        mt: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    w: \"100%\",\n    p: 4,\n    ml: \"auto\",\n    boxShadow: \"base\",\n    bg: \"#97CF6E\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"white\",\n      fontSize: \"m\",\n      fontWeight: \"extrabold\",\n      children: \"Grass\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ml: \"auto\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/alan/Desktop/Projects/tutorial-web/src/components/NavBar.tsx"],"names":["Text","Box","Flex","Link","Icon","React","NextLink","useLoginMutation","useMeQuery","SettingsIcon","NavBar","data","fetching","logout","body","me","username"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,IAA1B,EAAwCC,IAAxC,QAAoD,kBAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,sBAA7C;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,IAAuBJ,UAAU,EAAvC;AACA,QAAM,GAAGK,MAAH,IAAaN,gBAAgB,EAAnC;AAEA,MAAIO,IAAI,GAAG,IAAX;;AACA,MAAIF,QAAJ,EAAc,CACb,CADD,MACO,IAAI,EAACD,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEI,EAAP,CAAJ,EAAe;AACpBD,IAAAA,IAAI,gBACF;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAa,UAAA,KAAK,EAAC,OAAnB;AAA2B,UAAA,QAAQ,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAoB,UAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBADF;AAcD,GAfM,MAeA;AACLA,IAAAA,IAAI,gBACF,QAAC,IAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,KAAK,EAAC,OAAlB;AAA0B,QAAA,QAAQ,EAAC,IAAnC;AAAwC,QAAA,UAAU,EAAC,UAAnD;AAAA,gCACYH,IAAI,CAACI,EAAL,CAAQC,QADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbH,UAAAA,MAAM;AACP,SAHH;AAIE,QAAA,KAAK,EAAC,OAJR;AAKE,QAAA,EAAE,EAAEJ,YALN;AAME,QAAA,EAAE,EAAE;AANN;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,CAAC,EAAC,MAAR;AAAe,IAAA,CAAC,EAAE,CAAlB;AAAqB,IAAA,EAAE,EAAE,MAAzB;AAAiC,IAAA,SAAS,EAAC,MAA3C;AAAkD,IAAA,EAAE,EAAC,SAArD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,OAAZ;AAAoB,MAAA,QAAQ,EAAC,GAA7B;AAAiC,MAAA,UAAU,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,gBAAgBK;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA/CM","sourcesContent":["import { Text, Box, Flex, Link, Button, Icon } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport NextLink from \"next/link\";\nimport { useLoginMutation, useMeQuery } from \"../generated/graphql\";\nimport { SettingsIcon } from \"@chakra-ui/icons\";\n\nexport const NavBar = () => {\n  const [{ data, fetching }] = useMeQuery();\n  const [, logout] = useLoginMutation();\n\n  let body = null;\n  if (fetching) {\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={2} color=\"white\" fontSize=\"m\">\n            login\n          </Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link color=\"white\" fontSize=\"m\">\n            register\n          </Link>\n        </NextLink>\n      </>\n    );\n  } else {\n    body = (\n      <Flex>\n        <Box mr={6} color=\"white\" fontSize=\"sm\" fontWeight=\"semibold\">\n          Welcome, {data.me.username}\n        </Box>\n        <Icon\n          onClick={() => {\n            logout();\n          }}\n          color=\"white\"\n          as={SettingsIcon}\n          mt={0.5}\n        />\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex w=\"100%\" p={4} ml={\"auto\"} boxShadow=\"base\" bg=\"#97CF6E\">\n      <Text color=\"white\" fontSize=\"m\" fontWeight=\"extrabold\">\n        Grass\n      </Text>\n      <Box ml=\"auto\">{body}</Box>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
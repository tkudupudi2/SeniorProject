{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/alan/Desktop/Projects/tutorial-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alan/Desktop/Projects/tutorial-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/alan/Desktop/Projects/tutorial-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/alan/Desktop/Projects/tutorial-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport * as React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useRegisterMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nvar Register = function Register(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      register = _useRegisterMutation2[1];\n\n  return /*#__PURE__*/_jsx(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsx(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var _response$data, _response$data2;\n\n          var setErrors, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.next = 3;\n                  return register(values);\n\n                case 3:\n                  response = _context.sent;\n                  console.log(response);\n\n                  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.register.errors) {\n                    setErrors(toErrorMap(response.data.register.errors));\n                  } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.register.user) {\n                    router.push(\"/\");\n                  }\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return /*#__PURE__*/_jsxs(Form, {\n          children: [/*#__PURE__*/_jsx(InputField, {\n            name: \"username\",\n            placeholder: \"username\",\n            label: \"username\"\n          }), /*#__PURE__*/_jsx(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsx(InputField, {\n              name: \"password\",\n              placeholder: \"password\",\n              label: \"password\",\n              type: \"password\"\n            })\n          }), /*#__PURE__*/_jsx(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            colorScheme: \"green\",\n            children: \"register\"\n          })]\n        });\n      }\n    })\n  });\n};\n\nexport default withUrqlClient(createUrqlClient)(Register);","map":null,"metadata":{},"sourceType":"module"}
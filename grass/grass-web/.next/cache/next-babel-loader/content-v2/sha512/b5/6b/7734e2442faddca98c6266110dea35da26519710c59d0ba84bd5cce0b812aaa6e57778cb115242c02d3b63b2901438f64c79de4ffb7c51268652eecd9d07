{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alan/Desktop/Projects/tutorial-web/src/pages/register.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { Formik, Form } from \"formik\";\n\nconst Register = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: () => /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: form.errors.name && form.touched.name,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"name\",\n          children: \"First name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n          id: \"name\",\n          placeholder: \"name\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          children: form.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/alan/Desktop/Projects/tutorial-web/src/pages/register.tsx"],"names":["React","Formik","Form","Register","username","password","values","console","log","form","errors","name","touched","field"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;;AAGA,MAAMC,QAAiC,GAAG,MAAM;AAC9C,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAJH;AAAA,cAMG,mBACC,QAAC,IAAD;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEG,IAAI,CAACC,MAAL,CAAYC,IAAZ,IAAoBF,IAAI,CAACG,OAAL,CAAaD,IAAzD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD,kCAAWE,KAAX;AAAkB,UAAA,EAAE,EAAC,MAArB;AAA4B,UAAA,WAAW,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,gBAAD;AAAA,oBAAmBJ,IAAI,CAACC,MAAL,CAAYC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBD;;AAqBA,eAAeR,QAAf","sourcesContent":["import * as React from \"react\";\nimport { Formik, Form } from \"formik\";\n\ninterface registerProps {}\nconst Register: React.FC<registerProps> = () => {\n  return (\n    <Formik\n      initialValues={{ username: \"\", password: \"\" }}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {() => (\n        <Form>\n          <FormControl isInvalid={form.errors.name && form.touched.name}>\n            <FormLabel htmlFor=\"name\">First name</FormLabel>\n            <Input {...field} id=\"name\" placeholder=\"name\" />\n            <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n          </FormControl>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}